数据结构：是数据相互之间存在的一种或多种特定关系的数据元素的集合。

数据结构是一门研究非数值计算的程序问题中的操作对象，以及它们之间的关系和操作等相关问题的学科。

程序设计=数据结构+算法

数据：是描述客观事物的符号，是计算机中可以操作的对象，是能被计算机识别，并输入给计算机处理的符号集合。

数据元素：是组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理，也被称为记录。真正讨论问题时：数据元素才是数据结构中建立数据模型的着眼点。
数据项：一个数据元素可以由若干数据项组成。数据项是数据不可分割的最小单位。
数据对象：是性质相同的数据元素的集合，是数据的子集。性质相同：数据元素具有相同数量和类型的数据项。
数据类型：是指一组性质相同的值的集合及定义在此集合上的一些操作的总称。【按照值的不同划分，类型就用来说明变量或者表达式的取值范围和所能进行的操作】

结构：不同元素之间不是独立的，而是存在特定的关系，我们将这些关系称为结构。

逻辑结构：是指数据对象中数据元素之间的相互关系。
1.集合结构：集合结构中的数据元素除了同属一个集合外，它们之间没有其他关系。
2.线性结构：数据结构中的元素是有序的一对一的关系。
3.树形结构：树形结构的数据元素之间存在一对多的层次关系。
4.图形结构：图形结构的数据元素是多对多的关系。

物理结构：是指数据的逻辑结构在计算机中的存储形式。（对主存而言）
【物理结构是如何把数据元素存储到计算机的存储器中，存储器主要针对内存而言，像软盘、硬盘等外部存储器的数据组织通常用文件结构来描述】
1.顺序存储结构：是把数据元素存放在地址连续的存储单元里，其数据间的逻辑关系和物理关系是一致的。
2.链式存储结构：把数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以是不连续的。

抽象是指抽取出事物具有普遍性的本质。其意义在于数据类型的数学抽象特性。
抽象数据类型（Abstract Data Type,ADT）:一个数学模型及定义在该模型上的一组操作。
抽象数据类型体现了程序设计中问题分解、抽象和信息隐藏的特性。
